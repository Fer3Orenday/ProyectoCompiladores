
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AND ASSIGN CASE CIN COMENTARIO COMMA COUT DEC DIVIDE DO DOUBLE DOUBLE ELSE END EQUALS IDENTIFICADOR IF INC INT INT INTEGER INTEGER LBRACE LBRACKET LESSEQUALS LESSTHAN LPARENT MAIN MOD MOREEQUALS MORETHAN MULT NOT NOTEQUALS OR OR PIPE POT RBRACE RBRACKET REAL REAL RESTA RPARENT SEMICOLON SHAFT SUMA SWITCH THEN UNDERSCORE UNTIL WHILEprograma : MAIN LBRACE lista_declaraciones RBRACElista_declaraciones : lista_declaraciones declaracion\n                        | declaraciondeclaracion : declaracion_variable\n                   | lista_sentencias\n                   | comentariocomentario : COMENTARIOdeclaracion_variable : tipo identificador SEMICOLONidentificador : identificador COMMA IDENTIFICADOR\n                  | IDENTIFICADORtipo : INT\n            | DOUBLE\n            | INTEGER\n            | REALlista_sentencias : lista_sentencias sentencia \n                      | sentencia\n                      | vaciosentencia : seleccion \n                | iteracion\n                | repeticion\n                | entrada\n                | salida\n                | asignacion\n                | incremento\n                | decrementoasignacion : IDENTIFICADOR ASSIGN p_expresion_finalizadaincremento : IDENTIFICADOR INC SEMICOLONdecremento : IDENTIFICADOR DEC SEMICOLONp_expresion_finalizada : expresion SEMICOLON\n                       | SEMICOLONseleccion : IF expresion THEN lista_sentencias END\n                 | IF expresion THEN lista_sentencias ELSE lista_sentencias ENDiteracion : WHILE expresion DO lista_sentencias ENDrepeticion : DO lista_sentencias UNTIL expresion SEMICOLONentrada : CIN expresion SEMICOLONsalida : COUT expresion SEMICOLONexpresion : expresion AND expresion\n                 | expresion OR expresion\n                 | expresion_simple operacion_relacional expresion_simple\n                 | expresion_simpleoperacion_relacional : MORETHAN\n                   | LESSTHAN\n                   | MOREEQUALS\n                   | LESSEQUALS\n                   | EQUALS\n                   | NOTEQUALS\n                   | AND\n                   | ORexpresion_simple : expresion_simple primer_operador term\n                         | termprimer_operador : SUMA\n                | RESTAterm : term segundo_operador factor\n            | factorsegundo_operador : MULT\n              | DIVIDE\n              | MODfactor : factor tercer_operador componente\n              | componentetercer_operador : POTcomponente : LPARENT expresion RPARENT\n                  | numero\n                  | IDENTIFICADORnumero : INT\n              | DOUBLE\n              | LPARENT RESTA INT RPARENT\n              | LPARENT RESTA DOUBLE RPARENTvacio :'
    
_lr_action_items = {'MAIN':([0,],[2,]),'$end':([1,31,],[0,-1,]),'LBRACE':([2,],[3,]),'COMENTARIO':([3,4,5,6,7,8,10,11,12,17,18,19,20,21,22,23,24,32,33,53,80,81,82,84,85,86,100,101,105,106,108,],[12,12,-3,-4,-5,-6,-16,-17,-7,-18,-19,-20,-21,-22,-23,-24,-25,-2,-15,-8,-35,-36,-26,-30,-27,-28,-29,-31,-33,-34,-32,]),'INT':([3,4,5,6,7,8,10,11,12,17,18,19,20,21,22,23,24,25,26,28,29,32,33,41,50,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,80,81,82,84,85,86,100,101,105,106,108,],[13,13,-3,-4,-5,-6,-16,-17,-7,-18,-19,-20,-21,-22,-23,-24,-25,44,44,44,44,-2,-15,44,44,-8,44,44,44,44,-41,-42,-43,-44,-45,-46,-47,-48,-51,-52,44,-55,-56,-57,44,-60,96,44,-35,-36,-26,-30,-27,-28,-29,-31,-33,-34,-32,]),'DOUBLE':([3,4,5,6,7,8,10,11,12,17,18,19,20,21,22,23,24,25,26,28,29,32,33,41,50,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,80,81,82,84,85,86,100,101,105,106,108,],[14,14,-3,-4,-5,-6,-16,-17,-7,-18,-19,-20,-21,-22,-23,-24,-25,45,45,45,45,-2,-15,45,45,-8,45,45,45,45,-41,-42,-43,-44,-45,-46,-47,-48,-51,-52,45,-55,-56,-57,45,-60,97,45,-35,-36,-26,-30,-27,-28,-29,-31,-33,-34,-32,]),'INTEGER':([3,4,5,6,7,8,10,11,12,17,18,19,20,21,22,23,24,32,33,53,80,81,82,84,85,86,100,101,105,106,108,],[15,15,-3,-4,-5,-6,-16,-17,-7,-18,-19,-20,-21,-22,-23,-24,-25,-2,-15,-8,-35,-36,-26,-30,-27,-28,-29,-31,-33,-34,-32,]),'REAL':([3,4,5,6,7,8,10,11,12,17,18,19,20,21,22,23,24,32,33,53,80,81,82,84,85,86,100,101,105,106,108,],[16,16,-3,-4,-5,-6,-16,-17,-7,-18,-19,-20,-21,-22,-23,-24,-25,-2,-15,-8,-35,-36,-26,-30,-27,-28,-29,-31,-33,-34,-32,]),'IF':([3,4,5,6,7,8,10,11,12,17,18,19,20,21,22,23,24,27,32,33,47,53,55,78,80,81,82,84,85,86,88,98,100,101,102,105,106,107,108,],[25,25,-3,-4,25,-6,-16,-17,-7,-18,-19,-20,-21,-22,-23,-24,-25,25,-2,-15,25,-8,25,25,-35,-36,-26,-30,-27,-28,25,25,-29,-31,25,-33,-34,25,-32,]),'WHILE':([3,4,5,6,7,8,10,11,12,17,18,19,20,21,22,23,24,27,32,33,47,53,55,78,80,81,82,84,85,86,88,98,100,101,102,105,106,107,108,],[26,26,-3,-4,26,-6,-16,-17,-7,-18,-19,-20,-21,-22,-23,-24,-25,26,-2,-15,26,-8,26,26,-35,-36,-26,-30,-27,-28,26,26,-29,-31,26,-33,-34,26,-32,]),'DO':([3,4,5,6,7,8,10,11,12,17,18,19,20,21,22,23,24,27,32,33,37,38,39,40,42,43,44,45,46,47,53,55,78,80,81,82,84,85,86,88,89,90,91,92,93,94,95,98,100,101,102,103,104,105,106,107,108,],[27,27,-3,-4,27,-6,-16,-17,-7,-18,-19,-20,-21,-22,-23,-24,-25,27,-2,-15,-40,-50,-54,-59,-62,-63,-64,-65,78,27,-8,27,27,-35,-36,-26,-30,-27,-28,27,-37,-38,-39,-49,-53,-58,-61,27,-29,-31,27,-66,-67,-33,-34,27,-32,]),'CIN':([3,4,5,6,7,8,10,11,12,17,18,19,20,21,22,23,24,27,32,33,47,53,55,78,80,81,82,84,85,86,88,98,100,101,102,105,106,107,108,],[28,28,-3,-4,28,-6,-16,-17,-7,-18,-19,-20,-21,-22,-23,-24,-25,28,-2,-15,28,-8,28,28,-35,-36,-26,-30,-27,-28,28,28,-29,-31,28,-33,-34,28,-32,]),'COUT':([3,4,5,6,7,8,10,11,12,17,18,19,20,21,22,23,24,27,32,33,47,53,55,78,80,81,82,84,85,86,88,98,100,101,102,105,106,107,108,],[29,29,-3,-4,29,-6,-16,-17,-7,-18,-19,-20,-21,-22,-23,-24,-25,29,-2,-15,29,-8,29,29,-35,-36,-26,-30,-27,-28,29,29,-29,-31,29,-33,-34,29,-32,]),'IDENTIFICADOR':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,32,33,41,47,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,78,79,80,81,82,84,85,86,88,98,100,101,102,105,106,107,108,],[30,30,-3,-4,30,-6,35,-16,-17,-7,-11,-12,-13,-14,-18,-19,-20,-21,-22,-23,-24,-25,43,43,30,43,43,-2,-15,43,30,43,-8,87,30,43,43,43,43,-41,-42,-43,-44,-45,-46,-47,-48,-51,-52,43,-55,-56,-57,43,-60,30,43,-35,-36,-26,-30,-27,-28,30,30,-29,-31,30,-33,-34,30,-32,]),'RBRACE':([3,4,5,6,7,8,10,11,12,17,18,19,20,21,22,23,24,32,33,53,80,81,82,84,85,86,100,101,105,106,108,],[-68,31,-3,-4,-5,-6,-16,-17,-7,-18,-19,-20,-21,-22,-23,-24,-25,-2,-15,-8,-35,-36,-26,-30,-27,-28,-29,-31,-33,-34,-32,]),'UNTIL':([10,11,17,18,19,20,21,22,23,24,27,33,47,80,81,82,84,85,86,100,101,105,106,108,],[-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-68,-15,79,-35,-36,-26,-30,-27,-28,-29,-31,-33,-34,-32,]),'END':([10,11,17,18,19,20,21,22,23,24,33,55,78,80,81,82,84,85,86,88,98,100,101,102,105,106,107,108,],[-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-15,-68,-68,-35,-36,-26,-30,-27,-28,101,105,-29,-31,-68,-33,-34,108,-32,]),'ELSE':([10,11,17,18,19,20,21,22,23,24,33,55,80,81,82,84,85,86,88,100,101,105,106,108,],[-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-15,-68,-35,-36,-26,-30,-27,-28,102,-29,-31,-33,-34,-32,]),'LPARENT':([25,26,28,29,41,50,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,],[41,41,41,41,41,41,41,41,41,41,-41,-42,-43,-44,-45,-46,-47,-48,-51,-52,41,-55,-56,-57,41,-60,41,]),'ASSIGN':([30,],[50,]),'INC':([30,],[51,]),'DEC':([30,],[52,]),'SEMICOLON':([34,35,37,38,39,40,42,43,44,45,48,49,50,51,52,83,87,89,90,91,92,93,94,95,99,103,104,],[53,-10,-40,-50,-54,-59,-62,-63,-64,-65,80,81,84,85,86,100,-9,-37,-38,-39,-49,-53,-58,-61,106,-66,-67,]),'COMMA':([34,35,87,],[54,-10,-9,]),'THEN':([36,37,38,39,40,42,43,44,45,89,90,91,92,93,94,95,103,104,],[55,-40,-50,-54,-59,-62,-63,-64,-65,-37,-38,-39,-49,-53,-58,-61,-66,-67,]),'AND':([36,37,38,39,40,42,43,44,45,46,48,49,76,83,89,90,91,92,93,94,95,99,103,104,],[56,66,-50,-54,-59,-62,-63,-64,-65,56,56,56,56,56,56,56,-39,-49,-53,-58,-61,56,-66,-67,]),'OR':([36,37,38,39,40,42,43,44,45,46,48,49,76,83,89,90,91,92,93,94,95,99,103,104,],[57,67,-50,-54,-59,-62,-63,-64,-65,57,57,57,57,57,57,57,-39,-49,-53,-58,-61,57,-66,-67,]),'RPARENT':([37,38,39,40,42,43,44,45,76,89,90,91,92,93,94,95,96,97,103,104,],[-40,-50,-54,-59,-62,-63,-64,-65,95,-37,-38,-39,-49,-53,-58,-61,103,104,-66,-67,]),'MORETHAN':([37,38,39,40,42,43,44,45,92,93,94,95,103,104,],[60,-50,-54,-59,-62,-63,-64,-65,-49,-53,-58,-61,-66,-67,]),'LESSTHAN':([37,38,39,40,42,43,44,45,92,93,94,95,103,104,],[61,-50,-54,-59,-62,-63,-64,-65,-49,-53,-58,-61,-66,-67,]),'MOREEQUALS':([37,38,39,40,42,43,44,45,92,93,94,95,103,104,],[62,-50,-54,-59,-62,-63,-64,-65,-49,-53,-58,-61,-66,-67,]),'LESSEQUALS':([37,38,39,40,42,43,44,45,92,93,94,95,103,104,],[63,-50,-54,-59,-62,-63,-64,-65,-49,-53,-58,-61,-66,-67,]),'EQUALS':([37,38,39,40,42,43,44,45,92,93,94,95,103,104,],[64,-50,-54,-59,-62,-63,-64,-65,-49,-53,-58,-61,-66,-67,]),'NOTEQUALS':([37,38,39,40,42,43,44,45,92,93,94,95,103,104,],[65,-50,-54,-59,-62,-63,-64,-65,-49,-53,-58,-61,-66,-67,]),'SUMA':([37,38,39,40,42,43,44,45,91,92,93,94,95,103,104,],[68,-50,-54,-59,-62,-63,-64,-65,68,-49,-53,-58,-61,-66,-67,]),'RESTA':([37,38,39,40,41,42,43,44,45,91,92,93,94,95,103,104,],[69,-50,-54,-59,77,-62,-63,-64,-65,69,-49,-53,-58,-61,-66,-67,]),'MULT':([38,39,40,42,43,44,45,92,93,94,95,103,104,],[71,-54,-59,-62,-63,-64,-65,71,-53,-58,-61,-66,-67,]),'DIVIDE':([38,39,40,42,43,44,45,92,93,94,95,103,104,],[72,-54,-59,-62,-63,-64,-65,72,-53,-58,-61,-66,-67,]),'MOD':([38,39,40,42,43,44,45,92,93,94,95,103,104,],[73,-54,-59,-62,-63,-64,-65,73,-53,-58,-61,-66,-67,]),'POT':([39,40,42,43,44,45,93,94,95,103,104,],[75,-59,-62,-63,-64,-65,75,-58,-61,-66,-67,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'lista_declaraciones':([3,],[4,]),'declaracion':([3,4,],[5,32,]),'declaracion_variable':([3,4,],[6,6,]),'lista_sentencias':([3,4,27,55,78,102,],[7,7,47,88,98,107,]),'comentario':([3,4,],[8,8,]),'tipo':([3,4,],[9,9,]),'sentencia':([3,4,7,27,47,55,78,88,98,102,107,],[10,10,33,10,33,10,10,33,33,10,33,]),'vacio':([3,4,27,55,78,102,],[11,11,11,11,11,11,]),'seleccion':([3,4,7,27,47,55,78,88,98,102,107,],[17,17,17,17,17,17,17,17,17,17,17,]),'iteracion':([3,4,7,27,47,55,78,88,98,102,107,],[18,18,18,18,18,18,18,18,18,18,18,]),'repeticion':([3,4,7,27,47,55,78,88,98,102,107,],[19,19,19,19,19,19,19,19,19,19,19,]),'entrada':([3,4,7,27,47,55,78,88,98,102,107,],[20,20,20,20,20,20,20,20,20,20,20,]),'salida':([3,4,7,27,47,55,78,88,98,102,107,],[21,21,21,21,21,21,21,21,21,21,21,]),'asignacion':([3,4,7,27,47,55,78,88,98,102,107,],[22,22,22,22,22,22,22,22,22,22,22,]),'incremento':([3,4,7,27,47,55,78,88,98,102,107,],[23,23,23,23,23,23,23,23,23,23,23,]),'decremento':([3,4,7,27,47,55,78,88,98,102,107,],[24,24,24,24,24,24,24,24,24,24,24,]),'identificador':([9,],[34,]),'expresion':([25,26,28,29,41,50,56,57,79,],[36,46,48,49,76,83,89,90,99,]),'expresion_simple':([25,26,28,29,41,50,56,57,58,79,],[37,37,37,37,37,37,37,37,91,37,]),'term':([25,26,28,29,41,50,56,57,58,59,79,],[38,38,38,38,38,38,38,38,38,92,38,]),'factor':([25,26,28,29,41,50,56,57,58,59,70,79,],[39,39,39,39,39,39,39,39,39,39,93,39,]),'componente':([25,26,28,29,41,50,56,57,58,59,70,74,79,],[40,40,40,40,40,40,40,40,40,40,40,94,40,]),'numero':([25,26,28,29,41,50,56,57,58,59,70,74,79,],[42,42,42,42,42,42,42,42,42,42,42,42,42,]),'operacion_relacional':([37,],[58,]),'primer_operador':([37,91,],[59,59,]),'segundo_operador':([38,92,],[70,70,]),'tercer_operador':([39,93,],[74,74,]),'p_expresion_finalizada':([50,],[82,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> MAIN LBRACE lista_declaraciones RBRACE','programa',4,'p_programa','sint.py',7),
  ('lista_declaraciones -> lista_declaraciones declaracion','lista_declaraciones',2,'p_lista_declaraciones','sint.py',11),
  ('lista_declaraciones -> declaracion','lista_declaraciones',1,'p_lista_declaraciones','sint.py',12),
  ('declaracion -> declaracion_variable','declaracion',1,'p_declaracion','sint.py',19),
  ('declaracion -> lista_sentencias','declaracion',1,'p_declaracion','sint.py',20),
  ('declaracion -> comentario','declaracion',1,'p_declaracion','sint.py',21),
  ('comentario -> COMENTARIO','comentario',1,'p_comentario','sint.py',25),
  ('declaracion_variable -> tipo identificador SEMICOLON','declaracion_variable',3,'p_declaracion_variable','sint.py',29),
  ('identificador -> identificador COMMA IDENTIFICADOR','identificador',3,'p_identificador','sint.py',33),
  ('identificador -> IDENTIFICADOR','identificador',1,'p_identificador','sint.py',34),
  ('tipo -> INT','tipo',1,'p_tipo','sint.py',41),
  ('tipo -> DOUBLE','tipo',1,'p_tipo','sint.py',42),
  ('tipo -> INTEGER','tipo',1,'p_tipo','sint.py',43),
  ('tipo -> REAL','tipo',1,'p_tipo','sint.py',44),
  ('lista_sentencias -> lista_sentencias sentencia','lista_sentencias',2,'p_lista_sentencias','sint.py',48),
  ('lista_sentencias -> sentencia','lista_sentencias',1,'p_lista_sentencias','sint.py',49),
  ('lista_sentencias -> vacio','lista_sentencias',1,'p_lista_sentencias','sint.py',50),
  ('sentencia -> seleccion','sentencia',1,'p_sentencia','sint.py',59),
  ('sentencia -> iteracion','sentencia',1,'p_sentencia','sint.py',60),
  ('sentencia -> repeticion','sentencia',1,'p_sentencia','sint.py',61),
  ('sentencia -> entrada','sentencia',1,'p_sentencia','sint.py',62),
  ('sentencia -> salida','sentencia',1,'p_sentencia','sint.py',63),
  ('sentencia -> asignacion','sentencia',1,'p_sentencia','sint.py',64),
  ('sentencia -> incremento','sentencia',1,'p_sentencia','sint.py',65),
  ('sentencia -> decremento','sentencia',1,'p_sentencia','sint.py',66),
  ('asignacion -> IDENTIFICADOR ASSIGN p_expresion_finalizada','asignacion',3,'p_asignacion','sint.py',70),
  ('incremento -> IDENTIFICADOR INC SEMICOLON','incremento',3,'p_incremento','sint.py',74),
  ('decremento -> IDENTIFICADOR DEC SEMICOLON','decremento',3,'p_decremento','sint.py',78),
  ('p_expresion_finalizada -> expresion SEMICOLON','p_expresion_finalizada',2,'p_expresion_finalizada','sint.py',82),
  ('p_expresion_finalizada -> SEMICOLON','p_expresion_finalizada',1,'p_expresion_finalizada','sint.py',83),
  ('seleccion -> IF expresion THEN lista_sentencias END','seleccion',5,'p_seleccion','sint.py',90),
  ('seleccion -> IF expresion THEN lista_sentencias ELSE lista_sentencias END','seleccion',7,'p_seleccion','sint.py',91),
  ('iteracion -> WHILE expresion DO lista_sentencias END','iteracion',5,'p_iteracion','sint.py',98),
  ('repeticion -> DO lista_sentencias UNTIL expresion SEMICOLON','repeticion',5,'p_repeticion','sint.py',102),
  ('entrada -> CIN expresion SEMICOLON','entrada',3,'p_entrada','sint.py',106),
  ('salida -> COUT expresion SEMICOLON','salida',3,'p_salida','sint.py',110),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion','sint.py',114),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion','sint.py',115),
  ('expresion -> expresion_simple operacion_relacional expresion_simple','expresion',3,'p_expresion','sint.py',116),
  ('expresion -> expresion_simple','expresion',1,'p_expresion','sint.py',117),
  ('operacion_relacional -> MORETHAN','operacion_relacional',1,'p_operacion_relacional','sint.py',124),
  ('operacion_relacional -> LESSTHAN','operacion_relacional',1,'p_operacion_relacional','sint.py',125),
  ('operacion_relacional -> MOREEQUALS','operacion_relacional',1,'p_operacion_relacional','sint.py',126),
  ('operacion_relacional -> LESSEQUALS','operacion_relacional',1,'p_operacion_relacional','sint.py',127),
  ('operacion_relacional -> EQUALS','operacion_relacional',1,'p_operacion_relacional','sint.py',128),
  ('operacion_relacional -> NOTEQUALS','operacion_relacional',1,'p_operacion_relacional','sint.py',129),
  ('operacion_relacional -> AND','operacion_relacional',1,'p_operacion_relacional','sint.py',130),
  ('operacion_relacional -> OR','operacion_relacional',1,'p_operacion_relacional','sint.py',131),
  ('expresion_simple -> expresion_simple primer_operador term','expresion_simple',3,'p_expresion_simple','sint.py',135),
  ('expresion_simple -> term','expresion_simple',1,'p_expresion_simple','sint.py',136),
  ('primer_operador -> SUMA','primer_operador',1,'p_primer_operador','sint.py',143),
  ('primer_operador -> RESTA','primer_operador',1,'p_primer_operador','sint.py',144),
  ('term -> term segundo_operador factor','term',3,'p_term','sint.py',148),
  ('term -> factor','term',1,'p_term','sint.py',149),
  ('segundo_operador -> MULT','segundo_operador',1,'p_segundo_operador','sint.py',156),
  ('segundo_operador -> DIVIDE','segundo_operador',1,'p_segundo_operador','sint.py',157),
  ('segundo_operador -> MOD','segundo_operador',1,'p_segundo_operador','sint.py',158),
  ('factor -> factor tercer_operador componente','factor',3,'p_factor','sint.py',162),
  ('factor -> componente','factor',1,'p_factor','sint.py',163),
  ('tercer_operador -> POT','tercer_operador',1,'p_tercer_operador','sint.py',170),
  ('componente -> LPARENT expresion RPARENT','componente',3,'p_componente','sint.py',174),
  ('componente -> numero','componente',1,'p_componente','sint.py',175),
  ('componente -> IDENTIFICADOR','componente',1,'p_componente','sint.py',176),
  ('numero -> INT','numero',1,'p_numero','sint.py',183),
  ('numero -> DOUBLE','numero',1,'p_numero','sint.py',184),
  ('numero -> LPARENT RESTA INT RPARENT','numero',4,'p_numero','sint.py',185),
  ('numero -> LPARENT RESTA DOUBLE RPARENT','numero',4,'p_numero','sint.py',186),
  ('vacio -> <empty>','vacio',0,'p_vacio','sint.py',193),
]
